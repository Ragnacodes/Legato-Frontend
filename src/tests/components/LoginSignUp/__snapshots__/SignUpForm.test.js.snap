// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render SignUpForm correctly 1`] = `
<div>
  <WithStyles(ForwardRef(Backdrop))
    className="signup-backdrop"
    open={false}
  />
  <form
    autoComplete="off"
    className="signup-form"
    noValidate={true}
    onSubmit={[Function]}
  >
    <WithStyles(ForwardRef(TextField))
      className="text-field"
      error={false}
      helperText=""
      label="Username"
      name="username"
      onChange={[Function]}
      required={true}
      size="small"
      value=""
      variant="outlined"
    />
    <WithStyles(ForwardRef(TextField))
      className="text-field"
      error={false}
      helperText=""
      label="Email"
      name="email"
      onChange={[Function]}
      required={true}
      size="small"
      value=""
      variant="outlined"
    />
    <WithStyles(ForwardRef(TextField))
      InputProps={
        Object {
          "endAdornment": <WithStyles(ForwardRef(InputAdornment))
            position="end"
          >
            <WithStyles(ForwardRef(IconButton))
              aria-label="toggle password visibility"
              edge="end"
              onClick={[Function]}
              onMouseDown={[Function]}
            >
              <Memo />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(InputAdornment))>,
        }
      }
      autoComplete="false"
      className="text-field"
      error={false}
      helperText=""
      label="Password"
      name="password"
      onChange={[Function]}
      required={true}
      size="small"
      type="password"
      value=""
      variant="outlined"
    />
    <WithStyles(ForwardRef(TextField))
      InputProps={
        Object {
          "endAdornment": <WithStyles(ForwardRef(InputAdornment))
            position="end"
          >
            <WithStyles(ForwardRef(IconButton))
              aria-label="toggle password visibility"
              edge="end"
              onClick={[Function]}
              onMouseDown={[Function]}
            >
              <Memo />
            </WithStyles(ForwardRef(IconButton))>
          </WithStyles(ForwardRef(InputAdornment))>,
        }
      }
      className="text-field"
      error={false}
      helperText=""
      label="Confirm Password"
      name="confirm"
      onChange={[Function]}
      required={true}
      size="small"
      type="password"
      value=""
      variant="outlined"
    />
    <WithStyles(ForwardRef(Button))
      className="form-button"
      color="primary"
      disabled={true}
      fullWidth={true}
      type="submit"
      variant="contained"
    >
      Sign Up
    </WithStyles(ForwardRef(Button))>
  </form>
</div>
`;
